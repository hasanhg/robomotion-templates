{
	"nodes": [{
		"id": "33c5e025-61dd-49c3-be30-5f4f25e2c1c3",
		"type": "simple",
		"selected": true,
		"x": 750,
		"y": 100,
		"extras": {
			"inPayload": {
				"scope": "JS",
				"name": "Date.now()"
			},
			"outPayload": {
				"scope": "Message",
				"name": "payload"
			},
			"optRepeat": 1,
			"optOnce": true,
			"optOnceDelay": 0.1
		},
		"ports": [{
			"id": "79ee3b64-79e6-462f-8326-ebc31c4bcffa",
			"type": "default",
			"selected": false,
			"name": "out_79ee3b64-79e6-462f-8326-ebc31c4bcffa",
			"parentNode": "33c5e025-61dd-49c3-be30-5f4f25e2c1c3",
			"links": ["73b89738-63ac-4b2b-bf5b-5da712238922"],
			"in": false,
			"label": "simple",
			"position": "out"
		}],
		"model": {
			"id": "33c5e025-61dd-49c3-be30-5f4f25e2c1c3",
			"name": "Start",
			"icon": "M10,9A1,1 0 0,1 11,8A1,1 0 0,1 12,9V13.47L13.21,13.6L18.15,15.79C18.68,16.03 19,16.56 19,17.14V21.5C18.97,22.32 18.32,22.97 17.5,23H11C10.62,23 10.26,22.85 10,22.57L5.1,18.37L5.84,17.6C6.03,17.39 6.3,17.28 6.58,17.28H6.8L10,19V9M11,5A4,4 0 0,1 15,9C15,10.5 14.2,11.77 13,12.46V11.24C13.61,10.69 14,9.89 14,9A3,3 0 0,0 11,6A3,3 0 0,0 8,9C8,9.89 8.39,10.69 9,11.24V12.46C7.8,11.77 7,10.5 7,9A4,4 0 0,1 11,5Z",
			"color": "#FDD835",
			"namespace": "Core.Trigger.Inject",
			"version": "1.11.6",
			"abc": [{
				"name": "Start",
				"color": "#FDD835",
				"delayBefore": 0,
				"delayAfter": 0,
				"continueOnError": false,
				"version": "1.11.6"
			}, {
				"inPayload": {
					"scope": "JS",
					"name": "Date.now()"
				}
			}, {
				"outPayload": {
					"scope": "Message",
					"name": "payload"
				}
			}, {
				"optRepeat": 1,
				"optOnce": true,
				"optOnceDelay": 0.1
			}],
			"xyz": [{
				"schema": {
					"title": "Input",
					"type": "object",
					"properties": {
						"inPayload": {
							"type": "object",
							"title": "Payload",
							"variableType": "String",
							"customScope": true,
							"jsScope": true,
							"argsScope": true,
							"properties": {
								"scope": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							}
						}
					}
				},
				"uiSchema": {
					"inPayload": {
						"ui:field": "variable"
					}
				},
				"formData": {
					"inPayload": {
						"scope": "JS",
						"name": "Date.now()"
					}
				}
			}, {
				"schema": {
					"title": "Output",
					"type": "object",
					"properties": {
						"outPayload": {
							"type": "object",
							"title": "Payload",
							"variableType": "String",
							"messageOnly": true,
							"properties": {
								"scope": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							}
						}
					}
				},
				"uiSchema": {
					"outPayload": {
						"ui:field": "variable"
					}
				},
				"formData": {
					"outPayload": {
						"scope": "Message",
						"name": "payload"
					}
				}
			}, {
				"schema": {
					"title": "Options",
					"type": "object",
					"properties": {
						"optRepeat": {
							"title": "Repeat Interval (sec)",
							"type": "number"
						},
						"optOnce": {
							"title": "Once",
							"type": "boolean"
						},
						"optOnceDelay": {
							"title": "Once Delay (sec)",
							"type": "number"
						}
					}
				},
				"uiSchema": {
					"ui:order": ["optRepeat", "optOnceDelay", "optOnce"]
				},
				"formData": {
					"optRepeat": 1,
					"optOnce": true,
					"optOnceDelay": 0.1
				}
			}],
			"outputs": 1,
			"inputs": 0
		}
	}, {
		"id": "5835e286-6a4d-4c75-a03b-1e69d9cf9dd3",
		"type": "simple",
		"selected": true,
		"x": 327.5456185134064,
		"y": -79.4743061516426,
		"extras": {
			"optText": "## Extract Text From Image\nThis template uses *Google Vision* nodes for extracting text. \n\n### How it Works?\n\nFollow these steps to test this template;\n\n**1.** Go to Flow Designer and press package icon above the node palette.\n\n**2.** You should see Google Vision package icon, install it.\n\n**3.** You need to service account to test this template, see [here](https://cloud.google.com/iam/docs/creating-managing-service-accounts) for service accounts.\n\n**4.** You need to key of service account as json, see [here](https://cloud.google.com/iam/docs/creating-managing-service-account-keys#iam-service-account-keys-create-console) for create keys.\n\n**5.** Go to Vaults and create new document item with this json key.\n\n**6.** Set this vault item to connect node credentials.\n\n**7.** Edit the config node.\n\n**8.** Set the msg.imagepath to the path of image.\n\n**9.** Set the msg.txtfilepath to the path of text file for writing result.\n"
		},
		"ports": [],
		"model": {
			"id": "5835e286-6a4d-4c75-a03b-1e69d9cf9dd3",
			"name": "Comment",
			"icon": "M21,6V8H3V6H21M3,18H12V16H3V18M3,13H21V11H3V13Z",
			"color": "#FBE364",
			"namespace": "Core.Flow.Comment",
			"version": "1.11.6",
			"abc": [{}, {
				"optText": "## Extract Text From Image\nThis template uses *Google Vision* nodes for extracting text. \n\n### How it Works?\n\nFollow these steps to test this template;\n\n**1.** Go to Flow Designer and press package icon above the node palette.\n\n**2.** You should see Google Vision package icon, install it.\n\n**3.** You need to service account to test this template, see [here](https://cloud.google.com/iam/docs/creating-managing-service-accounts) for service accounts.\n\n**4.** You need to key of service account as json, see [here](https://cloud.google.com/iam/docs/creating-managing-service-account-keys#iam-service-account-keys-create-console) for create keys.\n\n**5.** Go to Vaults and create new document item with this json key.\n\n**6.** Set this vault item to connect node credentials.\n\n**7.** Edit the config node.\n\n**8.** Set the msg.imagepath to the path of image.\n\n**9.** Set the msg.txtfilepath to the path of text file for writing result.\n"
			}],
			"xyz": [{
				"schema": {
					"title": "Options",
					"type": "object",
					"properties": {
						"comment": {
							"title": "Comment",
							"type": "string"
						},
						"optText": {
							"title": "Text",
							"type": "string"
						}
					}
				},
				"uiSchema": {
					"optText": {
						"ui:description": "Comment",
						"ui:widget": "hidden",
						"ui:options": {
							"rows": 8
						}
					},
					"comment": {
						"ui:widget": "hidden",
						"ui:options": {
							"rows": 6
						}
					}
				},
				"formData": {
					"optText": "## Extract Text From Image\nThis template uses *Google Vision* nodes for extracting text. \n\n### How it Works?\n\nFollow these steps to test this template;\n\n**1.** Go to Flow Designer and press package icon above the node palette.\n\n**2.** You should see Google Vision package icon, install it.\n\n**3.** You need to service account to test this template, see [here](https://cloud.google.com/iam/docs/creating-managing-service-accounts) for service accounts.\n\n**4.** You need to key of service account as json, see [here](https://cloud.google.com/iam/docs/creating-managing-service-account-keys#iam-service-account-keys-create-console) for create keys.\n\n**5.** Go to Vaults and create new document item with this json key.\n\n**6.** Set this vault item to connect node credentials.\n\n**7.** Edit the config node.\n\n**8.** Set the msg.imagepath to the path of image.\n\n**9.** Set the msg.txtfilepath to the path of text file for writing result.\n"
				}
			}],
			"outputs": 0,
			"inputs": 0
		}
	}, {
		"id": "aeafc75e-c55e-4c6a-9097-bc360e67cb64",
		"type": "simple",
		"selected": true,
		"x": 1040.413950485303,
		"y": 260.98642624778086,
		"extras": {
			"outResult": {
				"scope": "Message",
				"name": "error"
			}
		},
		"ports": [{
			"id": "0451c76d-082a-4647-afea-aabdf96f9c6a",
			"type": "default",
			"selected": false,
			"name": "in",
			"parentNode": "aeafc75e-c55e-4c6a-9097-bc360e67cb64",
			"links": ["414afdf0-a457-47b3-81db-2207bde184fa"],
			"in": true,
			"label": "simple",
			"position": "in"
		}],
		"model": {
			"id": "aeafc75e-c55e-4c6a-9097-bc360e67cb64",
			"name": "Stop",
			"icon": "M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4M9,9V15H15V9",
			"color": "#fb2727",
			"namespace": "Core.Flow.Stop",
			"version": "1.11.6",
			"abc": [{}, {
				"outResult": {
					"scope": "Message",
					"name": "error"
				}
			}],
			"xyz": [{
				"schema": {
					"title": "Output",
					"type": "object",
					"properties": {
						"outResult": {
							"type": "object",
							"title": "Error",
							"variableType": "String",
							"messageOnly": true,
							"properties": {
								"scope": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							}
						}
					}
				},
				"uiSchema": {
					"ui:order": ["outResult"],
					"outResult": {
						"ui:field": "variable"
					}
				},
				"formData": {
					"outResult": {
						"scope": "Message",
						"name": "error"
					}
				}
			}],
			"outputs": 0,
			"inputs": 1
		}
	}, {
		"id": "c177d474-0b9f-43ac-9a0c-420de88f1d08",
		"type": "simple",
		"selected": true,
		"x": 1037.5295019836976,
		"y": 210.23652486810792,
		"extras": {
			"inPath": {
				"scope": "Message",
				"name": "txtfilepath"
			},
			"inText": {
				"scope": "Message",
				"name": "outtext"
			},
			"optMode": "append"
		},
		"ports": [{
			"id": "c67d2910-63ac-42c3-b3cd-c6894c9c5e80",
			"type": "default",
			"selected": false,
			"name": "out_c67d2910-63ac-42c3-b3cd-c6894c9c5e80",
			"parentNode": "c177d474-0b9f-43ac-9a0c-420de88f1d08",
			"links": ["414afdf0-a457-47b3-81db-2207bde184fa"],
			"in": false,
			"label": "simple",
			"position": "out"
		}, {
			"id": "9fbb6f85-73bb-440e-9235-d71d99f51aa9",
			"type": "default",
			"selected": false,
			"name": "in",
			"parentNode": "c177d474-0b9f-43ac-9a0c-420de88f1d08",
			"links": ["88b56cf0-dc43-44a5-9e91-a52bc3007be7"],
			"in": true,
			"label": "simple",
			"position": "in"
		}],
		"model": {
			"id": "c177d474-0b9f-43ac-9a0c-420de88f1d08",
			"name": "Write File",
			"icon": "M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z",
			"color": "#dbdfa0",
			"namespace": "Core.FileSystem.WriteFile",
			"version": "1.11.6",
			"abc": [{
				"name": "Write File",
				"version": "1.11.6",
				"color": "#dbdfa0",
				"delayBefore": 0,
				"delayAfter": 0,
				"continueOnError": false
			}, {
				"inPath": {
					"scope": "Message",
					"name": "txtfilepath"
				},
				"inText": {
					"scope": "Message",
					"name": "outtext"
				}
			}, {
				"optMode": "append"
			}],
			"xyz": [{
				"schema": {
					"title": "Input",
					"type": "object",
					"properties": {
						"inPath": {
							"type": "object",
							"title": "Path",
							"variableType": "String",
							"messageScope": true,
							"customScope": true,
							"properties": {
								"scope": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							}
						},
						"inText": {
							"type": "object",
							"title": "Text",
							"variableType": "String",
							"messageOnly": true,
							"customScope": true,
							"properties": {
								"scope": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							}
						}
					}
				},
				"uiSchema": {
					"inPath": {
						"ui:field": "variable"
					},
					"inText": {
						"ui:field": "variable"
					},
					"ui:order": ["inPath", "inText"]
				},
				"formData": {
					"inPath": {
						"scope": "Message",
						"name": "txtfilepath"
					},
					"inText": {
						"scope": "Message",
						"name": "text"
					}
				}
			}, {
				"schema": {
					"title": "Options",
					"type": "object",
					"properties": {
						"optMode": {
							"title": "Write Mode",
							"type": "string",
							"enum": ["append", "truncate"],
							"enumNames": ["Append", "Truncate"]
						}
					}
				},
				"uiSchema": {},
				"formData": {
					"optMode": "append"
				}
			}],
			"outputs": 1,
			"inputs": 1
		}
	}, {
		"id": "8bbb86e5-5ffb-4d6c-b8da-d8b8e8eda543",
		"type": "simple",
		"selected": true,
		"x": 740.4887987131216,
		"y": 150.03777189892813,
		"extras": {
			"outputs": 1,
			"func": "msg.imagepath = \"C:/Users/user/Desktop/ocrimage.png\"; //Path of image.\nmsg.txtfilepath = \"C:/Users/user/Desktop/ocrtext.txt\"; //Path of text file that will be created.\nreturn msg;",
			"optTimeout": 30,
			"variables": []
		},
		"ports": [{
			"id": "0bd0260a-cd28-436b-b17b-25780824c5e6",
			"type": "default",
			"selected": false,
			"name": "out_0bd0260a-cd28-436b-b17b-25780824c5e6",
			"parentNode": "8bbb86e5-5ffb-4d6c-b8da-d8b8e8eda543",
			"links": ["9442c8e4-c540-4404-a151-53d5634a0015"],
			"in": false,
			"label": "simple",
			"position": "out"
		}, {
			"id": "45ac6932-b270-44ef-b911-348e1f3e6648",
			"type": "default",
			"selected": false,
			"name": "in",
			"parentNode": "8bbb86e5-5ffb-4d6c-b8da-d8b8e8eda543",
			"links": ["73b89738-63ac-4b2b-bf5b-5da712238922"],
			"in": true,
			"label": "simple",
			"position": "in"
		}],
		"model": {
			"id": "8bbb86e5-5ffb-4d6c-b8da-d8b8e8eda543",
			"name": "Config",
			"icon": "M15.6,5.29C14.5,5.19 13.53,6 13.43,7.11L13.18,10H16V12H13L12.56,17.07C12.37,19.27 10.43,20.9 8.23,20.7C6.92,20.59 5.82,19.86 5.17,18.83L6.67,17.33C6.91,18.07 7.57,18.64 8.4,18.71C9.5,18.81 10.47,18 10.57,16.89L11,12H8V10H11.17L11.44,6.93C11.63,4.73 13.57,3.1 15.77,3.3C17.08,3.41 18.18,4.14 18.83,5.17L17.33,6.67C17.09,5.93 16.43,5.36 15.6,5.29Z",
			"color": "#F27925",
			"editor": "javascript",
			"namespace": "Core.Programming.Function",
			"version": "1.11.6",
			"abc": [{
				"name": "Config",
				"color": "#F27925",
				"delayBefore": 0,
				"delayAfter": 0,
				"continueOnError": false,
				"version": "1.11.6"
			}, {
				"outputs": 1,
				"func": "msg.imagepath = \"C:/Users/user/Desktop/ocrimage.png\"; //Path of image.\nmsg.txtfilepath = \"C:/Users/user/Desktop/ocrtext.txt\"; //Path of text file that will be created.\nreturn msg;",
				"optTimeout": 30
			}, {
				"variables": []
			}],
			"xyz": [{
				"schema": {
					"title": "Options",
					"type": "object",
					"properties": {
						"func": {
							"title": "Function",
							"type": "string"
						},
						"outputs": {
							"title": "Outputs",
							"type": "number",
							"minimum": 1,
							"maximum": 32
						},
						"optTimeout": {
							"title": "Script Timeout",
							"type": "number"
						}
					}
				},
				"uiSchema": {
					"outputs": {
						"ui:widget": "updown"
					},
					"func": {
						"ui:widget": "hidden",
						"ui:options": {
							"rows": 6
						}
					}
				},
				"formData": {
					"outputs": 1,
					"func": "msg.imagepath = \"C:/Users/user/Desktop/ocrimage.png\"; //Path of image.\nmsg.txtfilepath = \"C:/Users/user/Desktop/ocrtext.txt\"; //Path of text file that will be created.\nreturn msg;",
					"optTimeout": 30
				}
			}, {
				"schema": {
					"title": "Local Variables",
					"type": "object",
					"properties": {
						"variables": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"variableType": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"uiSchema": {
					"variables": {
						"ui:field": "localVariable"
					}
				},
				"formData": {
					"variables": []
				}
			}],
			"outputs": 1,
			"inputs": 1
		}
	}, {
		"id": "19db7445-de8f-40ab-b230-72ba62f67c65",
		"type": "simple",
		"selected": true,
		"x": 1031.9704344838817,
		"y": 157.9873036563144,
		"extras": {
			"inPath": {
				"scope": "Message",
				"name": "imagepath"
			},
			"inVisionClientID": {
				"name": "vision_client_id",
				"scope": "Message"
			},
			"outConfidence": {
				"name": "confidence",
				"scope": "Message"
			},
			"outText": {
				"name": "outtext",
				"scope": "Message"
			}
		},
		"ports": [{
			"id": "61afab2a-c2ae-4686-aa11-3177a3ee22a8",
			"type": "default",
			"selected": false,
			"name": "out_61afab2a-c2ae-4686-aa11-3177a3ee22a8",
			"parentNode": "19db7445-de8f-40ab-b230-72ba62f67c65",
			"links": ["88b56cf0-dc43-44a5-9e91-a52bc3007be7"],
			"in": false,
			"label": "simple",
			"position": "out"
		}, {
			"id": "3b627a0a-d5be-414a-9871-c826b363cc37",
			"type": "default",
			"selected": false,
			"name": "in",
			"parentNode": "19db7445-de8f-40ab-b230-72ba62f67c65",
			"links": ["bef9b028-1162-4a98-909d-f00c84deb82c"],
			"in": true,
			"label": "simple",
			"position": "in"
		}],
		"model": {
			"id": "19db7445-de8f-40ab-b230-72ba62f67c65",
			"name": "Image To Text",
			"icon": "M13,9H18.5L13,3.5V9M6,2H14L20,8V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V4C4,2.89 4.89,2 6,2M6,20H15L18,20V12L14,16L12,14L6,20M8,9A2,2 0 0,0 6,11A2,2 0 0,0 8,13A2,2 0 0,0 10,11A2,2 0 0,0 8,9Z",
			"color": "#ff1a1a",
			"namespace": "Robomotion.GoogleVision.ImageToText",
			"version": "0.2.0",
			"abc": [{
				"name": "Image To Text",
				"version": "0.2.0",
				"color": "#ff1a1a",
				"delayBefore": 0,
				"delayAfter": 0,
				"continueOnError": false
			}, {
				"inPath": {
					"scope": "Message",
					"name": "imagepath"
				},
				"inVisionClientID": {
					"name": "vision_client_id",
					"scope": "Message"
				}
			}, {
				"outConfidence": {
					"name": "confidence",
					"scope": "Message"
				},
				"outText": {
					"name": "outtext",
					"scope": "Message"
				}
			}],
			"xyz": [{
				"schema": {
					"type": "object",
					"title": "Input",
					"properties": {
						"inPath": {
							"type": "object",
							"title": "Path",
							"properties": {
								"name": {
									"type": "string"
								},
								"scope": {
									"type": "string"
								}
							},
							"customScope": true,
							"messageScope": true,
							"variableType": "String"
						},
						"inVisionClientID": {
							"type": "object",
							"title": "Vision Client Id",
							"properties": {
								"name": {
									"type": "string"
								},
								"scope": {
									"type": "string"
								}
							},
							"customScope": true,
							"messageScope": true,
							"variableType": "String"
						}
					}
				},
				"formData": {
					"inPath": {
						"scope": "Message",
						"name": "imagepath"
					},
					"inVisionClientID": {
						"name": "vision_client_id",
						"scope": "Message"
					}
				},
				"uiSchema": {
					"inPath": {
						"ui:field": "variable"
					},
					"inVisionClientID": {
						"ui:field": "variable"
					},
					"ui:order": ["inVisionClientID", "inPath"]
				}
			}, {
				"schema": {
					"type": "object",
					"title": "Output",
					"properties": {
						"outConfidence": {
							"type": "object",
							"title": "Confidence",
							"properties": {
								"name": {
									"type": "string"
								},
								"scope": {
									"type": "string"
								}
							},
							"customScope": true,
							"messageScope": true,
							"variableType": "Object"
						},
						"outText": {
							"type": "object",
							"title": "Text",
							"properties": {
								"name": {
									"type": "string"
								},
								"scope": {
									"type": "string"
								}
							},
							"customScope": true,
							"messageScope": true,
							"variableType": "String"
						}
					}
				},
				"formData": {
					"outConfidence": {
						"name": "confidence",
						"scope": "Message"
					},
					"outText": {
						"name": "outtext",
						"scope": "Message"
					}
				},
				"uiSchema": {
					"outConfidence": {
						"ui:field": "variable"
					},
					"outText": {
						"ui:field": "variable"
					},
					"ui:order": ["outConfidence", "outText"]
				}
			}],
			"outputs": 1,
			"inputs": 1
		}
	}, {
		"id": "31459347-7798-4493-92ec-5da322d7b81e",
		"type": "simple",
		"selected": true,
		"x": 1034.3265665593535,
		"y": 108.09153673230202,
		"extras": {
			"outVisionId": {
				"name": "vision_client_id",
				"scope": "Message"
			},
			"optCredentials": {
				"vaultId": "_",
				"itemId": "_"
			}
		},
		"ports": [{
			"id": "b1693e31-06a2-45cd-8cdd-1ce46c970b72",
			"type": "default",
			"selected": false,
			"name": "out_b1693e31-06a2-45cd-8cdd-1ce46c970b72",
			"parentNode": "31459347-7798-4493-92ec-5da322d7b81e",
			"links": ["bef9b028-1162-4a98-909d-f00c84deb82c"],
			"in": false,
			"label": "simple",
			"position": "out"
		}, {
			"id": "96c106d5-1310-4ffe-874d-56a2b40ace11",
			"type": "default",
			"selected": false,
			"name": "in",
			"parentNode": "31459347-7798-4493-92ec-5da322d7b81e",
			"links": ["9442c8e4-c540-4404-a151-53d5634a0015"],
			"in": true,
			"label": "simple",
			"position": "in"
		}],
		"model": {
			"id": "31459347-7798-4493-92ec-5da322d7b81e",
			"name": "Connect",
			"icon": "M19,20H4C2.89,20 2,19.1 2,18V6C2,4.89 2.89,4 4,4H10L12,6H19A2,2 0 0,1 21,8H21L4,8V18L6.14,10H23.21L20.93,18.5C20.7,19.37 19.92,20 19,20Z",
			"color": "#ff1a1a",
			"namespace": "Robomotion.GoogleVision.Connect",
			"version": "0.2.0",
			"abc": [{
				"name": "Connect",
				"version": "0.2.0",
				"color": "#ff1a1a"
			}, {
				"outVisionId": {
					"name": "vision_client_id",
					"scope": "Message"
				}
			}, {
				"optCredentials": {
					"vaultId": "_",
					"itemId": "_"
				}
			}],
			"xyz": [{
				"schema": {
					"type": "object",
					"title": "Output",
					"properties": {
						"outVisionId": {
							"type": "object",
							"title": "Vision Id",
							"properties": {
								"name": {
									"type": "string"
								},
								"scope": {
									"type": "string"
								}
							},
							"customScope": true,
							"messageScope": true,
							"variableType": "String"
						}
					}
				},
				"formData": {
					"outVisionId": {
						"name": "vision_client_id",
						"scope": "Message"
					}
				},
				"uiSchema": {
					"outVisionId": {
						"ui:field": "variable"
					},
					"ui:order": ["outVisionId"]
				}
			}, {
				"schema": {
					"type": "object",
					"title": "Options",
					"properties": {
						"optCredentials": {
							"type": "object",
							"title": "Credentials",
							"subtitle": "Credentials",
							"category": 0,
							"properties": {
								"itemId": {
									"type": "string"
								},
								"vaultId": {
									"type": "string"
								}
							}
						}
					}
				},
				"formData": {},
				"uiSchema": {
					"optCredentials": {
						"ui:field": "credentials"
					},
					"ui:order": ["optCredentials"]
				}
			}],
			"outputs": 1,
			"inputs": 1
		}
	}],
	"subFlows": []
}
{
	"nodes": [
		{
			"id": "cc5abe2d-e07c-455b-9c8c-872792d57e90",
			"type": "simple",
			"selected": true,
			"x": 736.1728647323253,
			"y": 134.8304045770331,
			"extras": {
				"outBody": {
					"scope": "Message",
					"name": "body"
				},
				"outHeaders": {
					"scope": "Message",
					"name": "headers"
				},
				"outCookies": {
					"scope": "Message",
					"name": "cookies"
				},
				"optMethod": "GET",
				"optEndpoint": "/"
			},
			"ports": [
				{
					"id": "e8065c75-07fd-422e-8e68-73f9f37ec7d1",
					"type": "default",
					"selected": false,
					"name": "out_e8065c75-07fd-422e-8e68-73f9f37ec7d1",
					"parentNode": "cc5abe2d-e07c-455b-9c8c-872792d57e90",
					"links": [
						"4a7e16b7-8f95-4f68-8b52-000213a63fac"
					],
					"in": false,
					"label": "simple",
					"position": "out"
				}
			],
			"model": {
				"id": "cc5abe2d-e07c-455b-9c8c-872792d57e90",
				"name": "Http In",
				"icon": "M8,3A2,2 0 0,0 6,5V9A2,2 0 0,1 4,11H3V13H4A2,2 0 0,1 6,15V19A2,2 0 0,0 8,21H10V19H8V14A2,2 0 0,0 6,12A2,2 0 0,0 8,10V5H10V3M16,3A2,2 0 0,1 18,5V9A2,2 0 0,0 20,11H21V13H20A2,2 0 0,0 18,15V19A2,2 0 0,1 16,21H14V19H16V14A2,2 0 0,1 18,12A2,2 0 0,1 16,10V5H14V3H16Z",
				"color": "#c9d9ff",
				"namespace": "Core.Net.HttpIn",
				"version": "1.11.6",
				"abc": [
					{},
					{
						"outBody": {
							"scope": "Message",
							"name": "body"
						},
						"outHeaders": {
							"scope": "Message",
							"name": "headers"
						},
						"outCookies": {
							"scope": "Message",
							"name": "cookies"
						}
					},
					{
						"optMethod": "GET",
						"optEndpoint": "/"
					}
				],
				"xyz": [
					{
						"schema": {
							"title": "Output",
							"type": "object",
							"properties": {
								"outBody": {
									"type": "object",
									"title": "Body",
									"variableType": "String",
									"messageOnly": true,
									"properties": {
										"scope": {
											"type": "string"
										},
										"name": {
											"type": "string"
										}
									}
								},
								"outHeaders": {
									"type": "object",
									"title": "Headers",
									"variableType": "Array",
									"messageOnly": true,
									"properties": {
										"scope": {
											"type": "string"
										},
										"name": {
											"type": "string"
										}
									}
								},
								"outCookies": {
									"type": "object",
									"title": "Cookies",
									"variableType": "Array",
									"messageOnly": true,
									"properties": {
										"scope": {
											"type": "string"
										},
										"name": {
											"type": "string"
										}
									}
								}
							}
						},
						"uiSchema": {
							"outBody": {
								"ui:field": "variable"
							},
							"outHeaders": {
								"ui:field": "variable"
							},
							"outCookies": {
								"ui:field": "variable"
							},
							"ui:order": [
								"outBody",
								"outHeaders",
								"outCookies"
							]
						},
						"formData": {
							"outBody": {
								"scope": "Message",
								"name": "body"
							},
							"outHeaders": {
								"scope": "Message",
								"name": "headers"
							},
							"outCookies": {
								"scope": "Message",
								"name": "cookies"
							}
						}
					},
					{
						"schema": {
							"title": "Options",
							"type": "object",
							"properties": {
								"optMethod": {
									"title": "Method",
									"type": "string",
									"multiple": true,
									"enum": [
										"GET",
										"POST",
										"PUT",
										"DELETE",
										"PATCH"
									]
								},
								"optEndpoint": {
									"title": "Endpoint",
									"type": "string"
								}
							}
						},
						"uiSchema": {
							"ui:order": [
								"optMethod",
								"optEndpoint"
							]
						},
						"formData": {
							"optMethod": "GET",
							"optEndpoint": "/"
						}
					}
				],
				"outputs": 1,
				"inputs": 0
			}
		},
		{
			"id": "13506387-3a8c-40c1-a09f-79f099cc9e88",
			"type": "simple",
			"selected": true,
			"x": 726.34695545566,
			"y": 310.2995504699632,
			"extras": {
				"inBody": {
					"scope": "Message",
					"name": "body"
				},
				"inHeaders": {
					"scope": "Message",
					"name": "headers"
				},
				"inCustomHeaders": [
					{
						"name": "Content-Type",
						"value": "text/html"
					}
				],
				"inCookies": {
					"scope": "Message",
					"name": "cookies"
				},
				"inCustomCookies": [],
				"inStatus": {
					"scope": "Custom",
					"name": "200"
				}
			},
			"ports": [
				{
					"id": "2fb99d70-0fe8-459a-82f3-95211f6e5e4e",
					"type": "default",
					"selected": false,
					"name": "in",
					"parentNode": "13506387-3a8c-40c1-a09f-79f099cc9e88",
					"links": [
						"1ab6060c-a28e-4862-a55b-b2a241a72343"
					],
					"in": true,
					"label": "simple",
					"position": "in"
				}
			],
			"model": {
				"id": "13506387-3a8c-40c1-a09f-79f099cc9e88",
				"name": "Http Out",
				"icon": "M8,3A2,2 0 0,0 6,5V9A2,2 0 0,1 4,11H3V13H4A2,2 0 0,1 6,15V19A2,2 0 0,0 8,21H10V19H8V14A2,2 0 0,0 6,12A2,2 0 0,0 8,10V5H10V3M16,3A2,2 0 0,1 18,5V9A2,2 0 0,0 20,11H21V13H20A2,2 0 0,0 18,15V19A2,2 0 0,1 16,21H14V19H16V14A2,2 0 0,1 18,12A2,2 0 0,1 16,10V5H14V3H16Z",
				"color": "#c9d9ff",
				"namespace": "Core.Net.HttpOut",
				"version": "1.11.6",
				"abc": [
					{
						"name": "Http Out",
						"version": "1.11.6",
						"color": "#c9d9ff",
						"delayBefore": 0,
						"delayAfter": 0,
						"continueOnError": false
					},
					{
						"inBody": {
							"scope": "Message",
							"name": "body"
						},
						"inHeaders": {
							"scope": "Message",
							"name": "headers"
						},
						"inCustomHeaders": [
							{
								"name": "Content-Type",
								"value": "text/html"
							}
						],
						"inCookies": {
							"scope": "Message",
							"name": "cookies"
						},
						"inCustomCookies": [],
						"inStatus": {
							"scope": "Custom",
							"name": "200"
						}
					}
				],
				"xyz": [
					{
						"schema": {
							"title": "Input",
							"type": "object",
							"properties": {
								"inBody": {
									"type": "object",
									"title": "Body",
									"variableType": "String",
									"messageScope": true,
									"contentScope": true,
									"jsScope": true,
									"properties": {
										"scope": {
											"type": "string"
										},
										"name": {
											"type": "string"
										}
									}
								},
								"inHeaders": {
									"type": "object",
									"title": "Headers",
									"variableType": "Array",
									"messageOnly": true,
									"properties": {
										"scope": {
											"type": "string"
										},
										"name": {
											"type": "string"
										}
									}
								},
								"inCustomHeaders": {
									"type": "array",
									"title": "",
									"items": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string",
												"title": "Name"
											},
											"value": {
												"type": "string",
												"title": "Value"
											}
										}
									}
								},
								"inCookies": {
									"type": "object",
									"title": "Cookies",
									"variableType": "Array",
									"messageOnly": true,
									"properties": {
										"scope": {
											"type": "string"
										},
										"name": {
											"type": "string"
										}
									}
								},
								"inCustomCookies": {
									"type": "array",
									"title": "",
									"items": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string",
												"title": "Name"
											},
											"value": {
												"type": "string",
												"title": "Value"
											}
										}
									}
								},
								"inStatus": {
									"type": "object",
									"title": "Status Code",
									"variableType": "Integer",
									"messageScope": true,
									"customScope": true,
									"properties": {
										"scope": {
											"type": "string"
										},
										"name": {
											"type": "string"
										}
									}
								}
							}
						},
						"uiSchema": {
							"inBody": {
								"ui:field": "variable"
							},
							"inHeaders": {
								"ui:field": "variable"
							},
							"inCustomHeaders": {
								"ui:description": "Custom Headers",
								"ui:options": {
									"orderable": false
								}
							},
							"inCustomCookies": {
								"ui:description": "Custom Cookies",
								"ui:options": {
									"orderable": false
								}
							},
							"inCookies": {
								"ui:field": "variable"
							},
							"inStatus": {
								"ui:field": "variable"
							},
							"ui:order": [
								"inStatus",
								"inBody",
								"inHeaders",
								"inCustomHeaders",
								"inCookies",
								"inCustomCookies"
							]
						},
						"formData": {
							"inStatus": {
								"scope": "Custom",
								"name": "200"
							},
							"inBody": {
								"scope": "Message",
								"name": "body"
							},
							"inHeaders": {
								"scope": "Message",
								"name": "headers"
							},
							"inCustomHeaders": [
								{
									"name": "Content-Type",
									"value": "application/json"
								}
							],
							"inCustomCookies": [],
							"inCookies": {
								"scope": "Message",
								"name": "cookies"
							}
						}
					}
				],
				"outputs": 0,
				"inputs": 1
			}
		},
		{
			"id": "79efb813-c61b-4744-95cf-a436fccba7ac",
			"type": "simple",
			"selected": true,
			"x": 726.9783408255006,
			"y": 251.0866366979976,
			"extras": {
				"outRendered": {
					"scope": "Message",
					"name": "body"
				},
				"func": "<html>\n  <head>\n    <title>Countdown</title>\n    <style>\n      body {\n        display: flex;\n        align-items: center;\n      }\n      #container {\n        margin: 0 auto;\n        width: fit-content;\n      }\n      .num {\n        font-size: 24;\n        font-weight: 500;\n        font-family: monospace;\n        padding: 12;\n      }\n      .desc {\n        width: 72;\n        text-align: center;\n      }\n      .separator {\n        display: inline;\n        margin: 1;\n      }\n    </style>\n    <script>\n      function onLoad() {\n        getDiff();\n        setInterval(tick, 1000);\n      }\n      \n      function getDiff() {\n        const now = Date.now();\n        let diff = (new Date(Date.UTC({{year}}, {{month}}-1, {{day}}, {{hour}}, {{min}}, {{sec}})) - now)/1000;\n        const years = Math.floor(diff / (60*60*24*365)); diff -= years * (60*60*24*365);\n        const months = Math.floor(diff / (60*60*24*30)); diff -=  months * (60*60*24*30);\n        const days = Math.floor(diff / (60*60*24)); diff -= days * (60*60*24);\n        const hours = Math.floor(diff / (60*60)); diff -= hours * (60*60);\n        const mins = Math.floor(diff / 60); diff -= mins * 60;\n        const sec = Math.floor(diff);\n        document.getElementById(\"years\").innerHTML = years.toString().padStart(2, '0');\n        document.getElementById(\"months\").innerHTML = months.toString().padStart(2, '0');\n        document.getElementById(\"days\").innerHTML = days.toString().padStart(2, '0');\n        document.getElementById(\"hours\").innerHTML = hours.toString().padStart(2, '0');\n        document.getElementById(\"mins\").innerHTML = mins.toString().padStart(2, '0');\n        document.getElementById(\"sec\").innerHTML = sec.toString().padStart(2, '0');\n        const elems = document.getElementsByClassName(\"separator\");\n        for (let i = 0; i < elems.length; i++) elems[i].innerHTML = sec%2 === 0 ? ':' : ' ';\n      }\n      \n      function tick() {\n        getDiff();\n      }\n    </script>\n  </head>\n  <body onLoad=\"onLoad()\">\n    <div id=\"container\">\n      <div style=\"margin: 8\">\n        <span id=\"years\" class=\"num\"></span>\n        <pre class=\"separator\"></pre>\n        <span id=\"months\" class=\"num\"></span>\n        <pre class=\"separator\"></pre>\n        <span id=\"days\" class=\"num\"></span>\n        <pre class=\"separator\"></pre>\n        <span id=\"hours\" class=\"num\"></span>\n        <pre class=\"separator\"></pre>\n        <span id=\"mins\" class=\"num\"></span>\n        <pre class=\"separator\"></pre>\n        <span id=\"sec\" class=\"num\"></span>\n      </div>\n      \n      <div style=\"display: flex;\">\n        <div class=\"desc\">years</div>\n        <div class=\"desc\">months</div>\n        <div class=\"desc\">days</div>\n        <div class=\"desc\">hours</div>\n        <div class=\"desc\">minutes</div>\n        <div class=\"desc\">seconds</div>\n      </div>\n    </div>\n  </body>\n</html>\n"
			},
			"ports": [
				{
					"id": "d1866ac7-5956-47a8-bd6d-e60e14236756",
					"type": "default",
					"selected": false,
					"name": "out_d1866ac7-5956-47a8-bd6d-e60e14236756",
					"parentNode": "79efb813-c61b-4744-95cf-a436fccba7ac",
					"links": [
						"1ab6060c-a28e-4862-a55b-b2a241a72343"
					],
					"in": false,
					"label": "simple",
					"position": "out"
				},
				{
					"id": "2fbb40e8-69d4-467c-a288-7510b0833b55",
					"type": "default",
					"selected": false,
					"name": "in",
					"parentNode": "79efb813-c61b-4744-95cf-a436fccba7ac",
					"links": [
						"056a3b2c-e7c5-44fa-a169-a4599572da55"
					],
					"in": true,
					"label": "simple",
					"position": "in"
				}
			],
			"model": {
				"id": "79efb813-c61b-4744-95cf-a436fccba7ac",
				"name": "Http Template",
				"icon": "M15,20A1,1 0 0,0 16,19V4H8A1,1 0 0,0 7,5V16H5V5A3,3 0 0,1 8,2H19A3,3 0 0,1 22,5V6H20V5A1,1 0 0,0 19,4A1,1 0 0,0 18,5V9L18,19A3,3 0 0,1 15,22H5A3,3 0 0,1 2,19V18H13A2,2 0 0,0 15,20Z",
				"color": "#c9d9ff",
				"editor": "html",
				"namespace": "Core.Net.HttpTemplate",
				"version": "1.11.6",
				"abc": [
					{
						"name": "Http Template",
						"version": "1.11.6",
						"color": "#c9d9ff",
						"delayBefore": 0,
						"delayAfter": 0,
						"continueOnError": false
					},
					{
						"outRendered": {
							"scope": "Message",
							"name": "body"
						},
						"func": "<html>\n  <head>\n    <title>Countdown</title>\n    <style>\n      body {\n        display: flex;\n        align-items: center;\n      }\n      #container {\n        margin: 0 auto;\n        width: fit-content;\n      }\n      .num {\n        font-size: 24;\n        font-weight: 500;\n        font-family: monospace;\n        padding: 12;\n      }\n      .desc {\n        width: 72;\n        text-align: center;\n      }\n      .separator {\n        display: inline;\n        margin: 1;\n      }\n    </style>\n    <script>\n      function onLoad() {\n        getDiff();\n        setInterval(tick, 1000);\n      }\n      \n      function getDiff() {\n        const now = Date.now();\n        let diff = (new Date(Date.UTC({{year}}, {{month}}-1, {{day}}, {{hour}}, {{min}}, {{sec}})) - now)/1000;\n        const years = Math.floor(diff / (60*60*24*365)); diff -= years * (60*60*24*365);\n        const months = Math.floor(diff / (60*60*24*30)); diff -=  months * (60*60*24*30);\n        const days = Math.floor(diff / (60*60*24)); diff -= days * (60*60*24);\n        const hours = Math.floor(diff / (60*60)); diff -= hours * (60*60);\n        const mins = Math.floor(diff / 60); diff -= mins * 60;\n        const sec = Math.floor(diff);\n        document.getElementById(\"years\").innerHTML = years.toString().padStart(2, '0');\n        document.getElementById(\"months\").innerHTML = months.toString().padStart(2, '0');\n        document.getElementById(\"days\").innerHTML = days.toString().padStart(2, '0');\n        document.getElementById(\"hours\").innerHTML = hours.toString().padStart(2, '0');\n        document.getElementById(\"mins\").innerHTML = mins.toString().padStart(2, '0');\n        document.getElementById(\"sec\").innerHTML = sec.toString().padStart(2, '0');\n        const elems = document.getElementsByClassName(\"separator\");\n        for (let i = 0; i < elems.length; i++) elems[i].innerHTML = sec%2 === 0 ? ':' : ' ';\n      }\n      \n      function tick() {\n        getDiff();\n      }\n    </script>\n  </head>\n  <body onLoad=\"onLoad()\">\n    <div id=\"container\">\n      <div style=\"margin: 8\">\n        <span id=\"years\" class=\"num\"></span>\n        <pre class=\"separator\"></pre>\n        <span id=\"months\" class=\"num\"></span>\n        <pre class=\"separator\"></pre>\n        <span id=\"days\" class=\"num\"></span>\n        <pre class=\"separator\"></pre>\n        <span id=\"hours\" class=\"num\"></span>\n        <pre class=\"separator\"></pre>\n        <span id=\"mins\" class=\"num\"></span>\n        <pre class=\"separator\"></pre>\n        <span id=\"sec\" class=\"num\"></span>\n      </div>\n      \n      <div style=\"display: flex;\">\n        <div class=\"desc\">years</div>\n        <div class=\"desc\">months</div>\n        <div class=\"desc\">days</div>\n        <div class=\"desc\">hours</div>\n        <div class=\"desc\">minutes</div>\n        <div class=\"desc\">seconds</div>\n      </div>\n    </div>\n  </body>\n</html>\n"
					}
				],
				"xyz": [
					{
						"schema": {
							"title": "Output",
							"type": "object",
							"properties": {
								"outRendered": {
									"type": "object",
									"title": "Output",
									"variableType": "String",
									"messageOnly": true,
									"properties": {
										"scope": {
											"type": "string"
										},
										"name": {
											"type": "string"
										}
									}
								},
								"func": {
									"title": "Function",
									"type": "string"
								}
							}
						},
						"uiSchema": {
							"outRendered": {
								"ui:field": "variable"
							},
							"func": {
								"ui:widget": "hidden"
							}
						},
						"formData": {
							"outRendered": {
								"scope": "Message",
								"name": "body"
							},
							"func": "<html>\n  <head>\n    <title>Countdown</title>\n    <style>\n      body {\n        display: flex;\n        align-items: center;\n      }\n      #container {\n        margin: 0 auto;\n        width: fit-content;\n      }\n      .num {\n        font-size: 24;\n        font-weight: 500;\n        font-family: monospace;\n        padding: 12;\n      }\n      .desc {\n        width: 72;\n        text-align: center;\n      }\n      .separator {\n        display: inline;\n        margin: 1;\n      }\n    </style>\n    <script>\n      function onLoad() {\n        getDiff();\n        setInterval(tick, 1000);\n      }\n      \n      function getDiff() {\n        const now = Date.now();\n        let diff = (new Date(Date.UTC({{year}}, {{month}}-1, {{day}}, {{hour}}, {{min}}, {{sec}})) - now)/1000;\n        const years = Math.floor(diff / (60*60*24*365)); diff -= years * (60*60*24*365);\n        const months = Math.floor(diff / (60*60*24*30)); diff -=  months * (60*60*24*30);\n        const days = Math.floor(diff / (60*60*24)); diff -= days * (60*60*24);\n        const hours = Math.floor(diff / (60*60)); diff -= hours * (60*60);\n        const mins = Math.floor(diff / 60); diff -= mins * 60;\n        const sec = Math.floor(diff);\n        document.getElementById(\"years\").innerHTML = years.toString().padStart(2, '0');\n        document.getElementById(\"months\").innerHTML = months.toString().padStart(2, '0');\n        document.getElementById(\"days\").innerHTML = days.toString().padStart(2, '0');\n        document.getElementById(\"hours\").innerHTML = hours.toString().padStart(2, '0');\n        document.getElementById(\"mins\").innerHTML = mins.toString().padStart(2, '0');\n        document.getElementById(\"sec\").innerHTML = sec.toString().padStart(2, '0');\n        const elems = document.getElementsByClassName(\"separator\");\n        for (let i = 0; i < elems.length; i++) elems[i].innerHTML = sec%2 === 0 ? ':' : ' ';\n      }\n      \n      function tick() {\n        getDiff();\n      }\n    </script>\n  </head>\n  <body onLoad=\"onLoad()\">\n    <div id=\"container\">\n      <div style=\"margin: 8\">\n        <span id=\"years\" class=\"num\"></span>\n        <pre class=\"separator\"></pre>\n        <span id=\"months\" class=\"num\"></span>\n        <pre class=\"separator\"></pre>\n        <span id=\"days\" class=\"num\"></span>\n        <pre class=\"separator\"></pre>\n        <span id=\"hours\" class=\"num\"></span>\n        <pre class=\"separator\"></pre>\n        <span id=\"mins\" class=\"num\"></span>\n        <pre class=\"separator\"></pre>\n        <span id=\"sec\" class=\"num\"></span>\n      </div>\n      \n      <div style=\"display: flex;\">\n        <div class=\"desc\">years</div>\n        <div class=\"desc\">months</div>\n        <div class=\"desc\">days</div>\n        <div class=\"desc\">hours</div>\n        <div class=\"desc\">minutes</div>\n        <div class=\"desc\">seconds</div>\n      </div>\n    </div>\n  </body>\n</html>\n"
						}
					}
				],
				"outputs": 1,
				"inputs": 1
			}
		},
		{
			"id": "dfc0c714-43de-4401-8134-f787e654ea45",
			"type": "simple",
			"selected": true,
			"x": 726,
			"y": 192,
			"extras": {
				"outputs": 1,
				"func": "msg.year = 2022,\nmsg.month = 1,\nmsg.day = 1,\nmsg.hour = 0,\nmsg.min = 0,\nmsg.sec = 0;\nreturn msg;",
				"optTimeout": 30,
				"variables": []
			},
			"ports": [
				{
					"id": "45736698-17fb-4ccc-b89f-4e40c251e053",
					"type": "default",
					"selected": false,
					"name": "out_45736698-17fb-4ccc-b89f-4e40c251e053",
					"parentNode": "dfc0c714-43de-4401-8134-f787e654ea45",
					"links": [
						"056a3b2c-e7c5-44fa-a169-a4599572da55"
					],
					"in": false,
					"label": "simple",
					"position": "out"
				},
				{
					"id": "45998abc-6737-426f-b9cc-79aa0d4899ae",
					"type": "default",
					"selected": false,
					"name": "in",
					"parentNode": "dfc0c714-43de-4401-8134-f787e654ea45",
					"links": [
						"4a7e16b7-8f95-4f68-8b52-000213a63fac"
					],
					"in": true,
					"label": "simple",
					"position": "in"
				}
			],
			"model": {
				"id": "dfc0c714-43de-4401-8134-f787e654ea45",
				"name": "Config",
				"icon": "M15.6,5.29C14.5,5.19 13.53,6 13.43,7.11L13.18,10H16V12H13L12.56,17.07C12.37,19.27 10.43,20.9 8.23,20.7C6.92,20.59 5.82,19.86 5.17,18.83L6.67,17.33C6.91,18.07 7.57,18.64 8.4,18.71C9.5,18.81 10.47,18 10.57,16.89L11,12H8V10H11.17L11.44,6.93C11.63,4.73 13.57,3.1 15.77,3.3C17.08,3.41 18.18,4.14 18.83,5.17L17.33,6.67C17.09,5.93 16.43,5.36 15.6,5.29Z",
				"color": "#F27925",
				"editor": "javascript",
				"namespace": "Core.Programming.Function",
				"version": "1.11.6",
				"abc": [
					{
						"name": "Config",
						"color": "#F27925",
						"delayBefore": 0,
						"delayAfter": 0,
						"continueOnError": false,
						"version": "1.11.6"
					},
					{
						"outputs": 1,
						"func": "msg.year = 2022,\nmsg.month = 1,\nmsg.day = 1,\nmsg.hour = 0,\nmsg.min = 0,\nmsg.sec = 0;\nreturn msg;",
						"optTimeout": 30
					},
					{
						"variables": []
					}
				],
				"xyz": [
					{
						"schema": {
							"title": "Options",
							"type": "object",
							"properties": {
								"func": {
									"title": "Function",
									"type": "string"
								},
								"outputs": {
									"title": "Outputs",
									"type": "number",
									"minimum": 1,
									"maximum": 32
								},
								"optTimeout": {
									"title": "Script Timeout",
									"type": "number"
								}
							}
						},
						"uiSchema": {
							"outputs": {
								"ui:widget": "updown"
							},
							"func": {
								"ui:widget": "hidden",
								"ui:options": {
									"rows": 6
								}
							}
						},
						"formData": {
							"outputs": 1,
							"func": "msg.year = 2022,\nmsg.month = 1,\nmsg.day = 1,\nmsg.hour = 0,\nmsg.min = 0,\nmsg.sec = 0;\nreturn msg;",
							"optTimeout": 30
						}
					},
					{
						"schema": {
							"title": "Local Variables",
							"type": "object",
							"properties": {
								"variables": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string"
											},
											"variableType": {
												"type": "string"
											}
										}
									}
								}
							}
						},
						"uiSchema": {
							"variables": {
								"ui:field": "localVariable"
							}
						},
						"formData": {
							"variables": []
						}
					}
				],
				"outputs": 1,
				"inputs": 1
			}
		},
		{
			"id": "989a2d69-1198-4173-9d56-6e40ad20ec86",
			"type": "simple",
			"selected": true,
			"x": 207.73529260823358,
			"y": 59.222558985086394,
			"extras": {
				"optText": "##### Countdown How-To \n\nThis template uses the *Net* nodes to count down for a specified date\nstarting from the current time.\n\nFollow these steps to test this template;\n\n**1.** Edit the Config Node\n\n**2.** Set the msg.year, msg.month, msg.day, msg.hour, msg.min, msg.sec fields\nto corresponding values for the date you want to count down.\n\n**3.** Go to `http://localhost:9090/` using your favorite browser.\n"
			},
			"ports": [],
			"model": {
				"id": "989a2d69-1198-4173-9d56-6e40ad20ec86",
				"name": "Comment",
				"icon": "M21,6V8H3V6H21M3,18H12V16H3V18M3,13H21V11H3V13Z",
				"color": "#FBE364",
				"namespace": "Core.Flow.Comment",
				"version": "0.0.0",
				"abc": [
					{},
					{
						"optText": "##### Countdown How-To \n\nThis template uses the *Net* nodes to count down for a specified date\nstarting from the current time.\n\nFollow these steps to test this template;\n\n**1.** Edit the Config Node\n\n**2.** Set the msg.year, msg.month, msg.day, msg.hour, msg.min, msg.sec fields\nto corresponding values for the date you want to count down.\n\n**3.** Go to `http://localhost:9090/` using your favorite browser.\n"
					}
				],
				"xyz": [
					{
						"formData": {
							"optText": "##### Countdown How-To \n\nThis template uses the *Net* nodes to count down for a specified date\nstarting from the current time.\n\nFollow these steps to test this template;\n\n**1.** Edit the Config Node\n\n**2.** Set the msg.year, msg.month, msg.day, msg.hour, msg.min, msg.sec fields\nto corresponding values for the date you want to count down.\n\n**3.** Go to `http://localhost:9090/` using your favorite browser.\n"
						},
						"schema": {
							"properties": {
								"comment": {
									"title": "Comment",
									"type": "string"
								},
								"optText": {
									"title": "Text",
									"type": "string"
								}
							},
							"title": "Options",
							"type": "object"
						},
						"uiSchema": {
							"comment": {
								"ui:options": {
									"rows": 6
								},
								"ui:widget": "hidden"
							},
							"optText": {
								"ui:description": "Comment",
								"ui:options": {
									"rows": 8
								},
								"ui:widget": "hidden"
							}
						}
					}
				],
				"outputs": 0,
				"inputs": 0
			}
		}
	],
	"subFlows": []
}
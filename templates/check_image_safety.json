{
	"nodes": [{
		"id": "1197a1f9-03a1-4c6f-b85f-d0db14604e7e",
		"type": "simple",
		"selected": true,
		"x": 576.8058435438265,
		"y": 254.32799245994346,
		"extras": {
			"outVisionId": {
				"name": "vision_client_id",
				"scope": "Message"
			},
			"optCredentials": {
				"vaultId": "_",
				"itemId": "_"
			}
		},
		"ports": [{
			"id": "f393a425-7959-4f9d-8d95-774a4dcb70d1",
			"type": "default",
			"selected": false,
			"name": "out_f393a425-7959-4f9d-8d95-774a4dcb70d1",
			"parentNode": "1197a1f9-03a1-4c6f-b85f-d0db14604e7e",
			"links": ["c91f9af6-e2c5-4628-84cb-55c339c1b108"],
			"in": false,
			"label": "simple",
			"position": "out"
		}, {
			"id": "1f5c9562-d9e3-484b-b68c-5553f4ee80cc",
			"type": "default",
			"selected": false,
			"name": "in",
			"parentNode": "1197a1f9-03a1-4c6f-b85f-d0db14604e7e",
			"links": ["3585fc7b-98ec-468d-a4ed-e9eb653c148d"],
			"in": true,
			"label": "simple",
			"position": "in"
		}],
		"model": {
			"id": "1197a1f9-03a1-4c6f-b85f-d0db14604e7e",
			"name": "Connect",
			"icon": "M19,20H4C2.89,20 2,19.1 2,18V6C2,4.89 2.89,4 4,4H10L12,6H19A2,2 0 0,1 21,8H21L4,8V18L6.14,10H23.21L20.93,18.5C20.7,19.37 19.92,20 19,20Z",
			"color": "#ff1a1a",
			"namespace": "Robomotion.GoogleVision.Connect",
			"version": "0.2.0",
			"abc": [{
				"name": "Connect",
				"version": "0.2.0",
				"color": "#ff1a1a",
				"delayBefore": 0,
				"delayAfter": 0,
				"continueOnError": false
			}, {
				"outVisionId": {
					"name": "vision_client_id",
					"scope": "Message"
				}
			}, {
				"optCredentials": {
					"vaultId": "_",
					"itemId": "_"
				}
			}],
			"xyz": [{
				"schema": {
					"type": "object",
					"title": "Output",
					"properties": {
						"outVisionId": {
							"type": "object",
							"title": "Vision Id",
							"properties": {
								"name": {
									"type": "string"
								},
								"scope": {
									"type": "string"
								}
							},
							"customScope": true,
							"messageScope": true,
							"variableType": "String"
						}
					}
				},
				"formData": {
					"outVisionId": {
						"name": "vision_client_id",
						"scope": "Message"
					}
				},
				"uiSchema": {
					"outVisionId": {
						"ui:field": "variable"
					},
					"ui:order": ["outVisionId"]
				}
			}, {
				"schema": {
					"type": "object",
					"title": "Options",
					"properties": {
						"optCredentials": {
							"type": "object",
							"title": "Credentials",
							"subtitle": "Credentials",
							"category": 0,
							"properties": {
								"itemId": {
									"type": "string"
								},
								"vaultId": {
									"type": "string"
								}
							}
						}
					}
				},
				"formData": {
					"optCredentials": {
						"vaultId": "31728a24-3a82-4978-9ee0-3a0502e949dd",
						"itemId": "20214890-5be8-41f4-bf73-425d2fd57881"
					}
				},
				"uiSchema": {
					"optCredentials": {
						"ui:field": "credentials"
					},
					"ui:order": ["optCredentials"]
				}
			}],
			"outputs": 1,
			"inputs": 1
		}
	}, {
		"id": "2df26526-7d7b-4262-965a-dd8d0d05ab56",
		"type": "simple",
		"selected": true,
		"x": 575.449575871819,
		"y": 202.7530631479736,
		"extras": {
			"inPayload": {
				"scope": "JS",
				"name": "Date.now()"
			},
			"outPayload": {
				"scope": "Message",
				"name": "payload"
			},
			"optRepeat": 1,
			"optOnce": true,
			"optOnceDelay": 0.1
		},
		"ports": [{
			"id": "4d088c18-ad84-478c-9c60-829a23270e2e",
			"type": "default",
			"selected": false,
			"name": "out_4d088c18-ad84-478c-9c60-829a23270e2e",
			"parentNode": "2df26526-7d7b-4262-965a-dd8d0d05ab56",
			"links": ["3585fc7b-98ec-468d-a4ed-e9eb653c148d"],
			"in": false,
			"label": "simple",
			"position": "out"
		}],
		"model": {
			"id": "2df26526-7d7b-4262-965a-dd8d0d05ab56",
			"name": "Start",
			"icon": "M10,9A1,1 0 0,1 11,8A1,1 0 0,1 12,9V13.47L13.21,13.6L18.15,15.79C18.68,16.03 19,16.56 19,17.14V21.5C18.97,22.32 18.32,22.97 17.5,23H11C10.62,23 10.26,22.85 10,22.57L5.1,18.37L5.84,17.6C6.03,17.39 6.3,17.28 6.58,17.28H6.8L10,19V9M11,5A4,4 0 0,1 15,9C15,10.5 14.2,11.77 13,12.46V11.24C13.61,10.69 14,9.89 14,9A3,3 0 0,0 11,6A3,3 0 0,0 8,9C8,9.89 8.39,10.69 9,11.24V12.46C7.8,11.77 7,10.5 7,9A4,4 0 0,1 11,5Z",
			"color": "#FDD835",
			"namespace": "Core.Trigger.Inject",
			"version": "1.11.6",
			"abc": [{
				"name": "Start",
				"version": "1.11.6",
				"color": "#FDD835",
				"delayBefore": 0,
				"delayAfter": 0,
				"continueOnError": false
			}, {
				"inPayload": {
					"scope": "JS",
					"name": "Date.now()"
				}
			}, {
				"outPayload": {
					"scope": "Message",
					"name": "payload"
				}
			}, {
				"optRepeat": 1,
				"optOnce": true,
				"optOnceDelay": 0.1
			}],
			"xyz": [{
				"schema": {
					"title": "Input",
					"type": "object",
					"properties": {
						"inPayload": {
							"type": "object",
							"title": "Payload",
							"variableType": "String",
							"customScope": true,
							"jsScope": true,
							"argsScope": true,
							"properties": {
								"scope": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							}
						}
					}
				},
				"uiSchema": {
					"inPayload": {
						"ui:field": "variable"
					}
				},
				"formData": {
					"inPayload": {
						"scope": "JS",
						"name": "Date.now()"
					}
				}
			}, {
				"schema": {
					"title": "Output",
					"type": "object",
					"properties": {
						"outPayload": {
							"type": "object",
							"title": "Payload",
							"variableType": "String",
							"messageOnly": true,
							"properties": {
								"scope": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							}
						}
					}
				},
				"uiSchema": {
					"outPayload": {
						"ui:field": "variable"
					}
				},
				"formData": {
					"outPayload": {
						"scope": "Message",
						"name": "payload"
					}
				}
			}, {
				"schema": {
					"title": "Options",
					"type": "object",
					"properties": {
						"optRepeat": {
							"title": "Repeat Interval (sec)",
							"type": "number"
						},
						"optOnce": {
							"title": "Once",
							"type": "boolean"
						},
						"optOnceDelay": {
							"title": "Once Delay (sec)",
							"type": "number"
						}
					}
				},
				"uiSchema": {
					"ui:order": ["optRepeat", "optOnceDelay", "optOnce"]
				},
				"formData": {
					"optRepeat": 1,
					"optOnce": true,
					"optOnceDelay": 0.1
				}
			}],
			"outputs": 1,
			"inputs": 0
		}
	}, {
		"id": "9d46eaea-db7e-4c68-9090-42ed0ec493cc",
		"type": "simple",
		"selected": true,
		"x": 601.5589066918002,
		"y": 353.47785108388314,
		"extras": {
			"optDebugData": {
				"name": "",
				"scope": "Message"
			},
			"optActive": true,
			"optSysConsole": false
		},
		"ports": [{
			"id": "11030197-d637-4231-bf8d-d48d85565b80",
			"type": "default",
			"selected": false,
			"name": "in",
			"parentNode": "9d46eaea-db7e-4c68-9090-42ed0ec493cc",
			"links": ["66f778f5-4453-4ad2-a743-7cda03833841"],
			"in": true,
			"label": "simple",
			"position": "in"
		}],
		"model": {
			"id": "9d46eaea-db7e-4c68-9090-42ed0ec493cc",
			"name": "Debug",
			"icon": "M4,5H20V7H4V5M4,9H20V11H4V9M4,13H20V15H4V13M4,17H14V19H4V17Z",
			"color": "#E6EE9C",
			"namespace": "Core.Programming.Debug",
			"version": "1.11.6",
			"abc": [{}, {
				"optDebugData": {
					"name": "",
					"scope": "Message"
				},
				"optActive": true,
				"optSysConsole": false
			}],
			"xyz": [{
				"schema": {
					"title": "Options",
					"type": "object",
					"properties": {
						"optActive": {
							"title": "Active",
							"type": "boolean"
						},
						"optSysConsole": {
							"title": "System Console",
							"type": "boolean"
						},
						"optDebugData": {
							"type": "object",
							"title": "Debug Data",
							"variableType": "String",
							"messageScope": true,
							"properties": {
								"scope": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							}
						}
					}
				},
				"uiSchema": {
					"optDebugData": {
						"ui:field": "variable"
					},
					"ui:order": ["optDebugData", "optActive", "optSysConsole"]
				},
				"formData": {
					"optDebugData": {
						"name": "",
						"scope": "Message"
					},
					"optActive": true,
					"optSysConsole": false
				}
			}],
			"outputs": 0,
			"inputs": 1
		}
	}, {
		"id": "a8872cb0-a696-4b88-b339-334dea361422",
		"type": "simple",
		"selected": true,
		"x": 584.4806786050895,
		"y": 303.60414703110274,
		"extras": {
			"inPath": {
				"scope": "Custom",
				"name": "C:/Users/user/Desktop/safetytest.jpg"
			},
			"inVisionClientID": {
				"name": "vision_client_id",
				"scope": "Message"
			},
			"result": {
				"name": "result",
				"scope": "Message"
			}
		},
		"ports": [{
			"id": "48232142-6c08-45cb-8ac9-71bab5ba0acb",
			"type": "default",
			"selected": false,
			"name": "out_48232142-6c08-45cb-8ac9-71bab5ba0acb",
			"parentNode": "a8872cb0-a696-4b88-b339-334dea361422",
			"links": ["66f778f5-4453-4ad2-a743-7cda03833841"],
			"in": false,
			"label": "simple",
			"position": "out"
		}, {
			"id": "db674a3a-22f8-43fb-8cd1-c9722be9621e",
			"type": "default",
			"selected": false,
			"name": "in",
			"parentNode": "a8872cb0-a696-4b88-b339-334dea361422",
			"links": ["c91f9af6-e2c5-4628-84cb-55c339c1b108"],
			"in": true,
			"label": "simple",
			"position": "in"
		}],
		"model": {
			"id": "a8872cb0-a696-4b88-b339-334dea361422",
			"name": "Check Image Safety",
			"icon": "M20 2C21.1 2 22 2.9 22 4V20C22 21.1 21.1 22 20 22H19V23H15V22H9V23H5V22H4C2.9 22 2 21.1 2 20V4C2 2.9 2.9 2 4 2H20M17 12C17 11 16.7 10 16.2 9.2L17.7 7.7L16.3 6.3L14.8 7.8C14 7.3 13 7 12 7C11 7 10 7.3 9.2 7.8L7.8 6.3L6.3 7.8L7.8 9.3C7.3 10 7 11 7 12C7 13 7.3 14 7.8 14.8L6.3 16.3L7.8 17.7L9.3 16.2C10 16.7 11 17 12 17C13 17 14 16.7 14.8 16.2L16.3 17.7L17.7 16.3L16.2 14.8C16.7 14 17 13 17 12M12 9C13.7 9 15 10.3 15 12C15 13.7 13.7 15 12 15C10.3 15 9 13.7 9 12C9 10.3 10.3 9 12 9M12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14Z",
			"color": "#ff1a1a",
			"namespace": "Robomotion.GoogleVision.Check Image Safety",
			"version": "0.2.0",
			"abc": [{
				"name": "Check Image Safety",
				"version": "0.2.0",
				"color": "#ff1a1a",
				"delayBefore": 0,
				"delayAfter": 0,
				"continueOnError": false
			}, {
				"inPath": {
					"scope": "Custom",
					"name": "C:/Users/user/Desktop/safetytest.jpg"
				},
				"inVisionClientID": {
					"name": "vision_client_id",
					"scope": "Message"
				}
			}, {
				"result": {
					"name": "result",
					"scope": "Message"
				}
			}],
			"xyz": [{
				"schema": {
					"type": "object",
					"title": "Input",
					"properties": {
						"inPath": {
							"type": "object",
							"title": "Path",
							"properties": {
								"name": {
									"type": "string"
								},
								"scope": {
									"type": "string"
								}
							},
							"customScope": true,
							"messageScope": true,
							"variableType": "String"
						},
						"inVisionClientID": {
							"type": "object",
							"title": "Vision Client Id",
							"properties": {
								"name": {
									"type": "string"
								},
								"scope": {
									"type": "string"
								}
							},
							"customScope": true,
							"messageScope": true,
							"variableType": "String"
						}
					}
				},
				"formData": {
					"inPath": {
						"name": "",
						"scope": "Custom"
					},
					"inVisionClientID": {
						"name": "vision_client_id",
						"scope": "Message"
					}
				},
				"uiSchema": {
					"inPath": {
						"ui:field": "variable"
					},
					"inVisionClientID": {
						"ui:field": "variable"
					},
					"ui:order": ["inVisionClientID", "inPath"]
				}
			}, {
				"schema": {
					"type": "object",
					"title": "Output",
					"properties": {
						"result": {
							"type": "object",
							"title": "Text",
							"properties": {
								"name": {
									"type": "string"
								},
								"scope": {
									"type": "string"
								}
							},
							"customScope": true,
							"messageScope": true,
							"variableType": "Object"
						}
					}
				},
				"formData": {
					"result": {
						"name": "result",
						"scope": "Message"
					}
				},
				"uiSchema": {
					"result": {
						"ui:field": "variable"
					},
					"ui:order": ["result"]
				}
			}],
			"outputs": 1,
			"inputs": 1
		}
	}, {
		"id": "f94154c9-5b03-4269-9123-e96f6d8ecb1b",
		"type": "simple",
		"selected": true,
		"x": 104.02921771913256,
		"y": -90.56456173421319,
		"extras": {
			"optText": "## Check Image Safety\n\nThis template uses *Google Vision* nodes for checking an image's safety and returns adult, medical, racy, spoof, violence rates from 0 to 5 (0-Unknown, 1-very unlikely and 5-very likely).\n\n### How it Works?\n\nFollow these steps to test this template;\n\n**1.** Go to Repositories screen in Admin Console.\n\n**2.** Add [Testing](https://packages.robomotion.io/testing) package repository url.\n\n**3.** Go to Flow Designer and press package icon above the node palette.\n\n**4.** You should see Google Vision package icon, install it.\n\n**5.** You need to service account and enable vision api for your project to test this template, see [here](https://cloud.google.com/iam/docs/creating-managing-service-accounts) for service accounts.\n\n**6.** You need to key of service account as json, see [here](https://cloud.google.com/iam/docs/creating-managing-service-account-keys#iam-service-account-keys-create-console) for create keys.\n\n**7.** Go to Vaults and create new document item with this json key.\n\n**8.** Set this vault item to Connect node credentials.\n\n**9.** Set the path of image to Check Image Safety node's Path field."
		},
		"ports": [],
		"model": {
			"id": "f94154c9-5b03-4269-9123-e96f6d8ecb1b",
			"name": "Comment",
			"icon": "M21,6V8H3V6H21M3,18H12V16H3V18M3,13H21V11H3V13Z",
			"color": "#FBE364",
			"namespace": "Core.Flow.Comment",
			"version": "1.11.6",
			"abc": [{}, {
				"optText": "## Check Image Safety\n\nThis template uses *Google Vision* nodes for checking an image's safety and returns adult, medical, racy, spoof, violence rates from 0 to 5 (0-Unknown, 1-very unlikely and 5-very likely).\n\n### How it Works?\n\nFollow these steps to test this template;\n\n**1.** Go to Repositories screen in Admin Console.\n\n**2.** Add [Testing](https://packages.robomotion.io/testing) package repository url.\n\n**3.** Go to Flow Designer and press package icon above the node palette.\n\n**4.** You should see Google Vision package icon, install it.\n\n**5.** You need to service account and enable vision api for your project to test this template, see [here](https://cloud.google.com/iam/docs/creating-managing-service-accounts) for service accounts.\n\n**6.** You need to key of service account as json, see [here](https://cloud.google.com/iam/docs/creating-managing-service-account-keys#iam-service-account-keys-create-console) for create keys.\n\n**7.** Go to Vaults and create new document item with this json key.\n\n**8.** Set this vault item to Connect node credentials.\n\n**9.** Set the path of image to Check Image Safety node's Path field."
			}],
			"xyz": [{
				"schema": {
					"title": "Options",
					"type": "object",
					"properties": {
						"comment": {
							"title": "Comment",
							"type": "string"
						},
						"optText": {
							"title": "Text",
							"type": "string"
						}
					}
				},
				"uiSchema": {
					"optText": {
						"ui:description": "Comment",
						"ui:widget": "hidden",
						"ui:options": {
							"rows": 8
						}
					},
					"comment": {
						"ui:widget": "hidden",
						"ui:options": {
							"rows": 6
						}
					}
				},
				"formData": {
					"optText": "## Check Image Safety\n\nThis template uses *Google Vision* nodes for checking an image's safety and returns adult, medical, racy, spoof, violence rates from 0 to 5 (0-Unknown, 1-very unlikely and 5-very likely).\n\n### How it Works?\n\nFollow these steps to test this template;\n\n**1.** Go to Repositories screen in Admin Console.\n\n**2.** Add [Testing](https://packages.robomotion.io/testing) package repository url.\n\n**3.** Go to Flow Designer and press package icon above the node palette.\n\n**4.** You should see Google Vision package icon, install it.\n\n**5.** You need to service account and enable vision api for your project to test this template, see [here](https://cloud.google.com/iam/docs/creating-managing-service-accounts) for service accounts.\n\n**6.** You need to key of service account as json, see [here](https://cloud.google.com/iam/docs/creating-managing-service-account-keys#iam-service-account-keys-create-console) for create keys.\n\n**7.** Go to Vaults and create new document item with this json key.\n\n**8.** Set this vault item to Connect node credentials.\n\n**9.** Set the path of image to Check Image Safety node's Path field."
				}
			}],
			"outputs": 0,
			"inputs": 0
		}
	}],
	"subFlows": []
}